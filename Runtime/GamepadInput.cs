//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.0
//     from Assets/P/2024/2024_05_09_GamepadXboxInputUnity/Runtime/GamepadInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Eloi.Input.Gamepad
{
    /// <summary>
    /// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/P/2024/2024_05_09_GamepadXboxInputUnity/Runtime/GamepadInput.inputactions".
    /// </summary>
    /// <remarks>
    /// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
    /// </remarks>
    /// <example>
    /// <code>
    /// using namespace UnityEngine;
    /// using UnityEngine.InputSystem;
    ///
    /// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
    /// public class Example : MonoBehaviour, MyActions.IPlayerActions
    /// {
    ///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
    ///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
    ///
    ///     void Awake()
    ///     {
    ///         m_Actions = new MyActions_Actions();              // Create asset object.
    ///         m_Player = m_Actions.Player;                      // Extract action map object.
    ///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
    ///     }
    ///
    ///     void OnDestroy()
    ///     {
    ///         m_Actions.Dispose();                              // Destroy asset object.
    ///     }
    ///
    ///     void OnEnable()
    ///     {
    ///         m_Player.Enable();                                // Enable all actions within map.
    ///     }
    ///
    ///     void OnDisable()
    ///     {
    ///         m_Player.Disable();                               // Disable all actions within map.
    ///     }
    ///
    ///     #region Interface implementation of MyActions.IPlayerActions
    ///
    ///     // Invoked when "Move" action is either started, performed or canceled.
    ///     public void OnMove(InputAction.CallbackContext context)
    ///     {
    ///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
    ///     }
    ///
    ///     // Invoked when "Attack" action is either started, performed or canceled.
    ///     public void OnAttack(InputAction.CallbackContext context)
    ///     {
    ///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
    ///     }
    ///
    ///     #endregion
    /// }
    /// </code>
    /// </example>
    public partial class @GamepadInput: IInputActionCollection2, IDisposable
    {
        /// <summary>
        /// Provides access to the underlying asset instance.
        /// </summary>
        public InputActionAsset asset { get; }

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public @GamepadInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""GamepadInput"",
    ""maps"": [
        {
            ""name"": ""GamepadXbox360Type"",
            ""id"": ""7eaccafa-0763-40c7-9882-6999c06e1926"",
            ""actions"": [
                {
                    ""name"": ""Button Left"",
                    ""type"": ""Button"",
                    ""id"": ""04e58085-14ba-47af-ad8e-864fea7b0eb7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button Right"",
                    ""type"": ""Button"",
                    ""id"": ""fae1cbda-f62d-4b70-b9a0-7b072440ba4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button Down"",
                    ""type"": ""Button"",
                    ""id"": ""41f71923-6eab-45a0-89d6-3c3e0837f69f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button Up"",
                    ""type"": ""Button"",
                    ""id"": ""96aabe72-5ea1-49fc-a92d-1d1415945da5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu Left"",
                    ""type"": ""Button"",
                    ""id"": ""c75e1c85-1da3-495e-aa5e-dd6feed06ea3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu Right"",
                    ""type"": ""Button"",
                    ""id"": ""429e72e2-9053-4d27-a771-8fcec514e433"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoulder Left"",
                    ""type"": ""Button"",
                    ""id"": ""9e7b17a3-bb14-42ba-bfff-ccc30ebd9872"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoulder RIght"",
                    ""type"": ""Button"",
                    ""id"": ""e50980ac-f706-47e6-bf5d-87320f4e006d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Thumb Joystick Left"",
                    ""type"": ""Button"",
                    ""id"": ""aeb7f0b8-b7a0-47b8-9696-4b92f62863a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Thumb Joystick Right"",
                    ""type"": ""Button"",
                    ""id"": ""056e06c4-1f99-4100-818f-9379be6ffc3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger Left"",
                    ""type"": ""Value"",
                    ""id"": ""0b40fb7b-8dda-4b40-8d7b-db38a329f75d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger Right"",
                    ""type"": ""Value"",
                    ""id"": ""c5a642bc-55ac-48de-b208-104ce7404d22"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick Left Horizontal"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fb81e21c-5214-4296-ac28-340ae012c569"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick Left Vertical"",
                    ""type"": ""Value"",
                    ""id"": ""a49c0313-207e-4b88-a3d8-cfd064832b44"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick Right Horizontal"",
                    ""type"": ""Value"",
                    ""id"": ""0519bb90-7ba7-45fa-b2b8-f99f4b620228"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick Right Vertical"",
                    ""type"": ""Value"",
                    ""id"": ""a143fa4f-4327-495a-ac54-4c4f5d418c17"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pad Left"",
                    ""type"": ""Button"",
                    ""id"": ""e85ee12f-8723-4370-9450-1689440fdf54"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pad Up"",
                    ""type"": ""Button"",
                    ""id"": ""4aeab0fc-e9bc-43c2-bd7d-201bf2a0731f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pad Right"",
                    ""type"": ""Button"",
                    ""id"": ""b9636aa1-6b00-49ff-89f5-31ff290a553f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pad Down"",
                    ""type"": ""Button"",
                    ""id"": ""e21ceed4-269f-4a64-b07f-df4b1c06049e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8c97bc21-e5be-4b9b-920c-47876ba2f57b"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2365414-8fa5-4bf3-b464-2401616c6c17"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b988d738-cffa-446c-8fa3-884d1381daf5"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""474b3056-a61f-4795-878f-9c48fa5e0adf"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23efbb60-ceb1-46ee-92a2-80508ee29e0d"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c793a9f-255d-45ce-90fc-ffb682060f01"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c559abe-683e-4843-a87e-a0af624c2384"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a779d55-7676-4410-a78b-cadc7b1021ed"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcc5d5bd-93a3-4503-b7ca-25e6d1db8c0a"",
                    ""path"": ""<XInputController>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6972273-eeb6-4f6c-ac7e-1bd40e5745ee"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae91cc8b-1d6e-4b6a-8b94-26b562621f1e"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""525aef25-9738-478f-bf61-9623d71a5e4f"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f3413f8-53ef-4e05-b71d-f351f2687e22"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoulder Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""329a33d2-b4db-409b-941c-ac2c6c9df0dc"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoulder Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67260d9e-3861-44d1-aeab-06588fac6150"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoulder RIght"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05c91860-9a80-45a5-bb4c-007ad284804c"",
                    ""path"": ""<XInputController>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thumb Joystick Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f012ef3-f322-4c28-b18d-b9be1c512c9b"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thumb Joystick Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a6b6d9a-c924-4f10-a4d4-2dfd9df82066"",
                    ""path"": ""<XInputController>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thumb Joystick Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f05236c-eec1-464d-90a4-afd4e994a83b"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thumb Joystick Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f7c0360-61ea-4430-8df9-d7ca12de41ab"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoulder RIght"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5868709a-c877-4a22-8824-d42fbccd23cc"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be7ddaaa-1db5-464a-a1c9-e59504404aac"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baba4bd8-b6ed-4161-b9e3-ca61219ba182"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77496bf9-2373-4923-b5f3-ce59f4cdc87b"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""094ca8a5-c12b-4411-ac78-a00addec3c57"",
                    ""path"": ""<XInputController>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick Left Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d473b92-8bdf-4578-9e71-26b99cbca1a3"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick Left Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca1379c8-6f50-4017-9d82-a8d0001b0b50"",
                    ""path"": ""<XInputController>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick Left Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84804926-b337-4324-8623-19e4af368993"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick Left Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f638f315-e1c8-4c3a-81ef-b3ed9d93d3e3"",
                    ""path"": ""<XInputController>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick Right Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d763611-4b64-475c-82c5-9525b95cc5b0"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick Right Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e7073b3-9750-4dc3-8482-4b2d910b66a1"",
                    ""path"": ""<XInputController>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick Right Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""691b3688-83a8-45e7-8066-9290efed3e26"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick Right Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d6d130c-7fd7-412e-9b61-309c89f63c19"",
                    ""path"": ""<XInputController>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pad Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a67454f-3d18-4203-91a3-18a1795acd3d"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pad Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2c468bc-cd02-4968-a820-6e5e367bec75"",
                    ""path"": ""<XInputController>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pad Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11d77061-6922-4409-a69f-07f0ab73b747"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pad Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aef39a51-44a5-4d26-bd7b-b522a4f6ec16"",
                    ""path"": ""<XInputController>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pad Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fc846c5-30e7-490c-999d-a2c1aec7c93e"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pad Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c9eeaff-575b-4569-a290-4d9fa63cfebc"",
                    ""path"": ""<XInputController>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pad Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebf84c63-4612-4e75-b618-2af73aaefa56"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pad Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // GamepadXbox360Type
            m_GamepadXbox360Type = asset.FindActionMap("GamepadXbox360Type", throwIfNotFound: true);
            m_GamepadXbox360Type_ButtonLeft = m_GamepadXbox360Type.FindAction("Button Left", throwIfNotFound: true);
            m_GamepadXbox360Type_ButtonRight = m_GamepadXbox360Type.FindAction("Button Right", throwIfNotFound: true);
            m_GamepadXbox360Type_ButtonDown = m_GamepadXbox360Type.FindAction("Button Down", throwIfNotFound: true);
            m_GamepadXbox360Type_ButtonUp = m_GamepadXbox360Type.FindAction("Button Up", throwIfNotFound: true);
            m_GamepadXbox360Type_MenuLeft = m_GamepadXbox360Type.FindAction("Menu Left", throwIfNotFound: true);
            m_GamepadXbox360Type_MenuRight = m_GamepadXbox360Type.FindAction("Menu Right", throwIfNotFound: true);
            m_GamepadXbox360Type_ShoulderLeft = m_GamepadXbox360Type.FindAction("Shoulder Left", throwIfNotFound: true);
            m_GamepadXbox360Type_ShoulderRIght = m_GamepadXbox360Type.FindAction("Shoulder RIght", throwIfNotFound: true);
            m_GamepadXbox360Type_ThumbJoystickLeft = m_GamepadXbox360Type.FindAction("Thumb Joystick Left", throwIfNotFound: true);
            m_GamepadXbox360Type_ThumbJoystickRight = m_GamepadXbox360Type.FindAction("Thumb Joystick Right", throwIfNotFound: true);
            m_GamepadXbox360Type_TriggerLeft = m_GamepadXbox360Type.FindAction("Trigger Left", throwIfNotFound: true);
            m_GamepadXbox360Type_TriggerRight = m_GamepadXbox360Type.FindAction("Trigger Right", throwIfNotFound: true);
            m_GamepadXbox360Type_JoystickLeftHorizontal = m_GamepadXbox360Type.FindAction("Joystick Left Horizontal", throwIfNotFound: true);
            m_GamepadXbox360Type_JoystickLeftVertical = m_GamepadXbox360Type.FindAction("Joystick Left Vertical", throwIfNotFound: true);
            m_GamepadXbox360Type_JoystickRightHorizontal = m_GamepadXbox360Type.FindAction("Joystick Right Horizontal", throwIfNotFound: true);
            m_GamepadXbox360Type_JoystickRightVertical = m_GamepadXbox360Type.FindAction("Joystick Right Vertical", throwIfNotFound: true);
            m_GamepadXbox360Type_PadLeft = m_GamepadXbox360Type.FindAction("Pad Left", throwIfNotFound: true);
            m_GamepadXbox360Type_PadUp = m_GamepadXbox360Type.FindAction("Pad Up", throwIfNotFound: true);
            m_GamepadXbox360Type_PadRight = m_GamepadXbox360Type.FindAction("Pad Right", throwIfNotFound: true);
            m_GamepadXbox360Type_PadDown = m_GamepadXbox360Type.FindAction("Pad Down", throwIfNotFound: true);
        }

        ~@GamepadInput()
        {
            UnityEngine.Debug.Assert(!m_GamepadXbox360Type.enabled, "This will cause a leak and performance issues, GamepadInput.GamepadXbox360Type.Disable() has not been called.");
        }

        /// <summary>
        /// Destroys this asset and all associated <see cref="InputAction"/> instances.
        /// </summary>
        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
        public void Enable()
        {
            asset.Enable();
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
        public void Disable()
        {
            asset.Disable();
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
        public IEnumerable<InputBinding> bindings => asset.bindings;

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // GamepadXbox360Type
        private readonly InputActionMap m_GamepadXbox360Type;
        private List<IGamepadXbox360TypeActions> m_GamepadXbox360TypeActionsCallbackInterfaces = new List<IGamepadXbox360TypeActions>();
        private readonly InputAction m_GamepadXbox360Type_ButtonLeft;
        private readonly InputAction m_GamepadXbox360Type_ButtonRight;
        private readonly InputAction m_GamepadXbox360Type_ButtonDown;
        private readonly InputAction m_GamepadXbox360Type_ButtonUp;
        private readonly InputAction m_GamepadXbox360Type_MenuLeft;
        private readonly InputAction m_GamepadXbox360Type_MenuRight;
        private readonly InputAction m_GamepadXbox360Type_ShoulderLeft;
        private readonly InputAction m_GamepadXbox360Type_ShoulderRIght;
        private readonly InputAction m_GamepadXbox360Type_ThumbJoystickLeft;
        private readonly InputAction m_GamepadXbox360Type_ThumbJoystickRight;
        private readonly InputAction m_GamepadXbox360Type_TriggerLeft;
        private readonly InputAction m_GamepadXbox360Type_TriggerRight;
        private readonly InputAction m_GamepadXbox360Type_JoystickLeftHorizontal;
        private readonly InputAction m_GamepadXbox360Type_JoystickLeftVertical;
        private readonly InputAction m_GamepadXbox360Type_JoystickRightHorizontal;
        private readonly InputAction m_GamepadXbox360Type_JoystickRightVertical;
        private readonly InputAction m_GamepadXbox360Type_PadLeft;
        private readonly InputAction m_GamepadXbox360Type_PadUp;
        private readonly InputAction m_GamepadXbox360Type_PadRight;
        private readonly InputAction m_GamepadXbox360Type_PadDown;
        /// <summary>
        /// Provides access to input actions defined in input action map "GamepadXbox360Type".
        /// </summary>
        public struct GamepadXbox360TypeActions
        {
            private @GamepadInput m_Wrapper;

            /// <summary>
            /// Construct a new instance of the input action map wrapper class.
            /// </summary>
            public GamepadXbox360TypeActions(@GamepadInput wrapper) { m_Wrapper = wrapper; }
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/ButtonLeft".
            /// </summary>
            public InputAction @ButtonLeft => m_Wrapper.m_GamepadXbox360Type_ButtonLeft;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/ButtonRight".
            /// </summary>
            public InputAction @ButtonRight => m_Wrapper.m_GamepadXbox360Type_ButtonRight;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/ButtonDown".
            /// </summary>
            public InputAction @ButtonDown => m_Wrapper.m_GamepadXbox360Type_ButtonDown;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/ButtonUp".
            /// </summary>
            public InputAction @ButtonUp => m_Wrapper.m_GamepadXbox360Type_ButtonUp;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/MenuLeft".
            /// </summary>
            public InputAction @MenuLeft => m_Wrapper.m_GamepadXbox360Type_MenuLeft;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/MenuRight".
            /// </summary>
            public InputAction @MenuRight => m_Wrapper.m_GamepadXbox360Type_MenuRight;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/ShoulderLeft".
            /// </summary>
            public InputAction @ShoulderLeft => m_Wrapper.m_GamepadXbox360Type_ShoulderLeft;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/ShoulderRIght".
            /// </summary>
            public InputAction @ShoulderRIght => m_Wrapper.m_GamepadXbox360Type_ShoulderRIght;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/ThumbJoystickLeft".
            /// </summary>
            public InputAction @ThumbJoystickLeft => m_Wrapper.m_GamepadXbox360Type_ThumbJoystickLeft;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/ThumbJoystickRight".
            /// </summary>
            public InputAction @ThumbJoystickRight => m_Wrapper.m_GamepadXbox360Type_ThumbJoystickRight;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/TriggerLeft".
            /// </summary>
            public InputAction @TriggerLeft => m_Wrapper.m_GamepadXbox360Type_TriggerLeft;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/TriggerRight".
            /// </summary>
            public InputAction @TriggerRight => m_Wrapper.m_GamepadXbox360Type_TriggerRight;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/JoystickLeftHorizontal".
            /// </summary>
            public InputAction @JoystickLeftHorizontal => m_Wrapper.m_GamepadXbox360Type_JoystickLeftHorizontal;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/JoystickLeftVertical".
            /// </summary>
            public InputAction @JoystickLeftVertical => m_Wrapper.m_GamepadXbox360Type_JoystickLeftVertical;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/JoystickRightHorizontal".
            /// </summary>
            public InputAction @JoystickRightHorizontal => m_Wrapper.m_GamepadXbox360Type_JoystickRightHorizontal;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/JoystickRightVertical".
            /// </summary>
            public InputAction @JoystickRightVertical => m_Wrapper.m_GamepadXbox360Type_JoystickRightVertical;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/PadLeft".
            /// </summary>
            public InputAction @PadLeft => m_Wrapper.m_GamepadXbox360Type_PadLeft;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/PadUp".
            /// </summary>
            public InputAction @PadUp => m_Wrapper.m_GamepadXbox360Type_PadUp;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/PadRight".
            /// </summary>
            public InputAction @PadRight => m_Wrapper.m_GamepadXbox360Type_PadRight;
            /// <summary>
            /// Provides access to the underlying input action "GamepadXbox360Type/PadDown".
            /// </summary>
            public InputAction @PadDown => m_Wrapper.m_GamepadXbox360Type_PadDown;
            /// <summary>
            /// Provides access to the underlying input action map instance.
            /// </summary>
            public InputActionMap Get() { return m_Wrapper.m_GamepadXbox360Type; }
            /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
            public void Enable() { Get().Enable(); }
            /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
            public void Disable() { Get().Disable(); }
            /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
            public bool enabled => Get().enabled;
            /// <summary>
            /// Implicitly converts an <see ref="GamepadXbox360TypeActions" /> to an <see ref="InputActionMap" /> instance.
            /// </summary>
            public static implicit operator InputActionMap(GamepadXbox360TypeActions set) { return set.Get(); }
            /// <summary>
            /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
            /// </summary>
            /// <param name="instance">Callback instance.</param>
            /// <remarks>
            /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
            /// </remarks>
            /// <seealso cref="GamepadXbox360TypeActions" />
            public void AddCallbacks(IGamepadXbox360TypeActions instance)
            {
                if (instance == null || m_Wrapper.m_GamepadXbox360TypeActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GamepadXbox360TypeActionsCallbackInterfaces.Add(instance);
                @ButtonLeft.started += instance.OnButtonLeft;
                @ButtonLeft.performed += instance.OnButtonLeft;
                @ButtonLeft.canceled += instance.OnButtonLeft;
                @ButtonRight.started += instance.OnButtonRight;
                @ButtonRight.performed += instance.OnButtonRight;
                @ButtonRight.canceled += instance.OnButtonRight;
                @ButtonDown.started += instance.OnButtonDown;
                @ButtonDown.performed += instance.OnButtonDown;
                @ButtonDown.canceled += instance.OnButtonDown;
                @ButtonUp.started += instance.OnButtonUp;
                @ButtonUp.performed += instance.OnButtonUp;
                @ButtonUp.canceled += instance.OnButtonUp;
                @MenuLeft.started += instance.OnMenuLeft;
                @MenuLeft.performed += instance.OnMenuLeft;
                @MenuLeft.canceled += instance.OnMenuLeft;
                @MenuRight.started += instance.OnMenuRight;
                @MenuRight.performed += instance.OnMenuRight;
                @MenuRight.canceled += instance.OnMenuRight;
                @ShoulderLeft.started += instance.OnShoulderLeft;
                @ShoulderLeft.performed += instance.OnShoulderLeft;
                @ShoulderLeft.canceled += instance.OnShoulderLeft;
                @ShoulderRIght.started += instance.OnShoulderRIght;
                @ShoulderRIght.performed += instance.OnShoulderRIght;
                @ShoulderRIght.canceled += instance.OnShoulderRIght;
                @ThumbJoystickLeft.started += instance.OnThumbJoystickLeft;
                @ThumbJoystickLeft.performed += instance.OnThumbJoystickLeft;
                @ThumbJoystickLeft.canceled += instance.OnThumbJoystickLeft;
                @ThumbJoystickRight.started += instance.OnThumbJoystickRight;
                @ThumbJoystickRight.performed += instance.OnThumbJoystickRight;
                @ThumbJoystickRight.canceled += instance.OnThumbJoystickRight;
                @TriggerLeft.started += instance.OnTriggerLeft;
                @TriggerLeft.performed += instance.OnTriggerLeft;
                @TriggerLeft.canceled += instance.OnTriggerLeft;
                @TriggerRight.started += instance.OnTriggerRight;
                @TriggerRight.performed += instance.OnTriggerRight;
                @TriggerRight.canceled += instance.OnTriggerRight;
                @JoystickLeftHorizontal.started += instance.OnJoystickLeftHorizontal;
                @JoystickLeftHorizontal.performed += instance.OnJoystickLeftHorizontal;
                @JoystickLeftHorizontal.canceled += instance.OnJoystickLeftHorizontal;
                @JoystickLeftVertical.started += instance.OnJoystickLeftVertical;
                @JoystickLeftVertical.performed += instance.OnJoystickLeftVertical;
                @JoystickLeftVertical.canceled += instance.OnJoystickLeftVertical;
                @JoystickRightHorizontal.started += instance.OnJoystickRightHorizontal;
                @JoystickRightHorizontal.performed += instance.OnJoystickRightHorizontal;
                @JoystickRightHorizontal.canceled += instance.OnJoystickRightHorizontal;
                @JoystickRightVertical.started += instance.OnJoystickRightVertical;
                @JoystickRightVertical.performed += instance.OnJoystickRightVertical;
                @JoystickRightVertical.canceled += instance.OnJoystickRightVertical;
                @PadLeft.started += instance.OnPadLeft;
                @PadLeft.performed += instance.OnPadLeft;
                @PadLeft.canceled += instance.OnPadLeft;
                @PadUp.started += instance.OnPadUp;
                @PadUp.performed += instance.OnPadUp;
                @PadUp.canceled += instance.OnPadUp;
                @PadRight.started += instance.OnPadRight;
                @PadRight.performed += instance.OnPadRight;
                @PadRight.canceled += instance.OnPadRight;
                @PadDown.started += instance.OnPadDown;
                @PadDown.performed += instance.OnPadDown;
                @PadDown.canceled += instance.OnPadDown;
            }

            /// <summary>
            /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
            /// </summary>
            /// <remarks>
            /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
            /// </remarks>
            /// <seealso cref="GamepadXbox360TypeActions" />
            private void UnregisterCallbacks(IGamepadXbox360TypeActions instance)
            {
                @ButtonLeft.started -= instance.OnButtonLeft;
                @ButtonLeft.performed -= instance.OnButtonLeft;
                @ButtonLeft.canceled -= instance.OnButtonLeft;
                @ButtonRight.started -= instance.OnButtonRight;
                @ButtonRight.performed -= instance.OnButtonRight;
                @ButtonRight.canceled -= instance.OnButtonRight;
                @ButtonDown.started -= instance.OnButtonDown;
                @ButtonDown.performed -= instance.OnButtonDown;
                @ButtonDown.canceled -= instance.OnButtonDown;
                @ButtonUp.started -= instance.OnButtonUp;
                @ButtonUp.performed -= instance.OnButtonUp;
                @ButtonUp.canceled -= instance.OnButtonUp;
                @MenuLeft.started -= instance.OnMenuLeft;
                @MenuLeft.performed -= instance.OnMenuLeft;
                @MenuLeft.canceled -= instance.OnMenuLeft;
                @MenuRight.started -= instance.OnMenuRight;
                @MenuRight.performed -= instance.OnMenuRight;
                @MenuRight.canceled -= instance.OnMenuRight;
                @ShoulderLeft.started -= instance.OnShoulderLeft;
                @ShoulderLeft.performed -= instance.OnShoulderLeft;
                @ShoulderLeft.canceled -= instance.OnShoulderLeft;
                @ShoulderRIght.started -= instance.OnShoulderRIght;
                @ShoulderRIght.performed -= instance.OnShoulderRIght;
                @ShoulderRIght.canceled -= instance.OnShoulderRIght;
                @ThumbJoystickLeft.started -= instance.OnThumbJoystickLeft;
                @ThumbJoystickLeft.performed -= instance.OnThumbJoystickLeft;
                @ThumbJoystickLeft.canceled -= instance.OnThumbJoystickLeft;
                @ThumbJoystickRight.started -= instance.OnThumbJoystickRight;
                @ThumbJoystickRight.performed -= instance.OnThumbJoystickRight;
                @ThumbJoystickRight.canceled -= instance.OnThumbJoystickRight;
                @TriggerLeft.started -= instance.OnTriggerLeft;
                @TriggerLeft.performed -= instance.OnTriggerLeft;
                @TriggerLeft.canceled -= instance.OnTriggerLeft;
                @TriggerRight.started -= instance.OnTriggerRight;
                @TriggerRight.performed -= instance.OnTriggerRight;
                @TriggerRight.canceled -= instance.OnTriggerRight;
                @JoystickLeftHorizontal.started -= instance.OnJoystickLeftHorizontal;
                @JoystickLeftHorizontal.performed -= instance.OnJoystickLeftHorizontal;
                @JoystickLeftHorizontal.canceled -= instance.OnJoystickLeftHorizontal;
                @JoystickLeftVertical.started -= instance.OnJoystickLeftVertical;
                @JoystickLeftVertical.performed -= instance.OnJoystickLeftVertical;
                @JoystickLeftVertical.canceled -= instance.OnJoystickLeftVertical;
                @JoystickRightHorizontal.started -= instance.OnJoystickRightHorizontal;
                @JoystickRightHorizontal.performed -= instance.OnJoystickRightHorizontal;
                @JoystickRightHorizontal.canceled -= instance.OnJoystickRightHorizontal;
                @JoystickRightVertical.started -= instance.OnJoystickRightVertical;
                @JoystickRightVertical.performed -= instance.OnJoystickRightVertical;
                @JoystickRightVertical.canceled -= instance.OnJoystickRightVertical;
                @PadLeft.started -= instance.OnPadLeft;
                @PadLeft.performed -= instance.OnPadLeft;
                @PadLeft.canceled -= instance.OnPadLeft;
                @PadUp.started -= instance.OnPadUp;
                @PadUp.performed -= instance.OnPadUp;
                @PadUp.canceled -= instance.OnPadUp;
                @PadRight.started -= instance.OnPadRight;
                @PadRight.performed -= instance.OnPadRight;
                @PadRight.canceled -= instance.OnPadRight;
                @PadDown.started -= instance.OnPadDown;
                @PadDown.performed -= instance.OnPadDown;
                @PadDown.canceled -= instance.OnPadDown;
            }

            /// <summary>
            /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="GamepadXbox360TypeActions.UnregisterCallbacks(IGamepadXbox360TypeActions)" />.
            /// </summary>
            /// <seealso cref="GamepadXbox360TypeActions.UnregisterCallbacks(IGamepadXbox360TypeActions)" />
            public void RemoveCallbacks(IGamepadXbox360TypeActions instance)
            {
                if (m_Wrapper.m_GamepadXbox360TypeActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            /// <summary>
            /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
            /// </summary>
            /// <remarks>
            /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
            /// </remarks>
            /// <seealso cref="GamepadXbox360TypeActions.AddCallbacks(IGamepadXbox360TypeActions)" />
            /// <seealso cref="GamepadXbox360TypeActions.RemoveCallbacks(IGamepadXbox360TypeActions)" />
            /// <seealso cref="GamepadXbox360TypeActions.UnregisterCallbacks(IGamepadXbox360TypeActions)" />
            public void SetCallbacks(IGamepadXbox360TypeActions instance)
            {
                foreach (var item in m_Wrapper.m_GamepadXbox360TypeActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GamepadXbox360TypeActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        /// <summary>
        /// Provides a new <see cref="GamepadXbox360TypeActions" /> instance referencing this action map.
        /// </summary>
        public GamepadXbox360TypeActions @GamepadXbox360Type => new GamepadXbox360TypeActions(this);
        /// <summary>
        /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "GamepadXbox360Type" which allows adding and removing callbacks.
        /// </summary>
        /// <seealso cref="GamepadXbox360TypeActions.AddCallbacks(IGamepadXbox360TypeActions)" />
        /// <seealso cref="GamepadXbox360TypeActions.RemoveCallbacks(IGamepadXbox360TypeActions)" />
        public interface IGamepadXbox360TypeActions
        {
            /// <summary>
            /// Method invoked when associated input action "Button Left" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnButtonLeft(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Button Right" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnButtonRight(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Button Down" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnButtonDown(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Button Up" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnButtonUp(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Menu Left" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnMenuLeft(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Menu Right" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnMenuRight(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Shoulder Left" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnShoulderLeft(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Shoulder RIght" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnShoulderRIght(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Thumb Joystick Left" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnThumbJoystickLeft(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Thumb Joystick Right" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnThumbJoystickRight(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Trigger Left" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnTriggerLeft(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Trigger Right" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnTriggerRight(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Joystick Left Horizontal" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnJoystickLeftHorizontal(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Joystick Left Vertical" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnJoystickLeftVertical(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Joystick Right Horizontal" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnJoystickRightHorizontal(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Joystick Right Vertical" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnJoystickRightVertical(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Pad Left" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnPadLeft(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Pad Up" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnPadUp(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Pad Right" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnPadRight(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Pad Down" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnPadDown(InputAction.CallbackContext context);
        }
    }
}
